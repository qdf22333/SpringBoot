package com.mysite.sbb2.users;

import java.util.List;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.mysite.sbb.question.QuestionForm;

import jakarta.validation.Valid;
import lombok.RequiredArgsConstructor;

@Controller
@RequiredArgsConstructor
public class UsersController {
   
   private final UsersService usersservice;
   
   @GetMapping("users_list")
   //@ResponseBody
   public String list(Model model) {
      
      List<Users> usersList =
            this.usersservice.getList();	
      
      model.addAttribute("usersList", usersList);
      
      return "users_list";
   }
   
   //상세 페이지
   @GetMapping("/users/detail/{idx}")
   public String detail (Model model, @PathVariable("idx") Integer idx) {
	   Users u = 
			   this.usersservice.getUsers(idx);
	   
	   model.addAttribute("users", u);
	   return "users_detail";
   }
   
   @GetMapping("/users/create")
   public String usersCreate(usersForm usersForm) {
      return "users_form";
   }
   @PostMapping("/users/create")
   public String usersCreate(
         //@RequestParam String subject,@RequestParam String content
         @Valid usersForm usersForm, BindingResult bingResult)
          {
            
            if (bingResult.hasErrors()) {   // subject,content 가 비어있을 때
               return "users_form";
            }
      
      // 로직 작성 부분 (Service 에서 로직을 만들어서 작동)
      //this.questionService.create(subject, content);
            
            this.questionService.create(questionForm.getSubject(), questionForm.getContent());
      
      // 값을 DB에 저장 후 List페이지로 리다이렉트 (질문 목록으로 이동)
      return "redirect:/question/list";
   
   

}